name: publish-library

on:
  workflow_call:
    inputs:
      registryRepositoryName:
        type: string
        default: "silvester-306016/the-farmer-docker/the-farmer/helm-charts"
      dockerRegistry:
        type: string
        default: "europe-west1-docker.pkg.dev"
      chartDirectory:
        type: string
        default: "./chart"  

    secrets:
      dockerUsername: 
        required: true
      dockerPassword:
        required: true        

jobs:

  get-chart-version:
    runs-on: ubuntu-latest
    outputs: 
      chartVersion: ${{ steps.get-semantic-version.outputs.group1 }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@releases/v2
        
    - name: SEMVER - Load
      id: read-properties
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ inputs.chartDirectory }}/Chart.yaml 
        
    - name: SEMVER - Determine.
      id: get-semantic-version
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ steps.read-properties.outputs.content }}
        regex: 'version: (.*)'    

  get-chart-name:
    runs-on: ubuntu-latest
    outputs: 
      chartName: ${{ steps.get-chart-name.outputs.group1 }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@releases/v2
        
    - name: SEMVER - Load
      id: read-properties
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ inputs.chartDirectory }}/Chart.yaml 
        
    - name: SEMVER - Determine.
      id: get-chart-name
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ steps.read-properties.outputs.content }}
        regex: 'name: (.*)'    
  
  publish:
    runs-on: ubuntu-latest
    needs:
    - get-chart-version
    - get-chart-name
    container:
      image: alpine/helm:3.10.2
    steps:
    - name: Check out the repo
      uses: actions/checkout@releases/v2

    - name: HELM - Package
      run: helm package ${{ inputs.chartDirectory }}

    - name: HELM - Login
      run: |
        helm registry login "${{ inputs.dockerRegistry }}" -u "${{ secrets.dockerUsername }}" --password-stdin <<EOF
        ${{ secrets.dockerPassword }}
        EOF

    - name: HELM - Push
      run: helm push ${{ needs.get-chart-name.outputs.chartName }}-${{ needs.get-chart-version.outputs.chartVersion }}.tgz oci://${{ inputs.dockerRegistry }}/${{ inputs.registryRepositoryName }}